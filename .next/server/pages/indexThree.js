"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/indexThree";
exports.ids = ["pages/indexThree"];
exports.modules = {

/***/ "./pages/indexThree.js":
/*!*****************************!*\
  !*** ./pages/indexThree.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction lottieScroll(config) {\n  window.addEventListener(\"scroll\", function () {\n    for (const playerId in config) {\n      // Get the lottie player element and lottie reference\n      const player = document.getElementById(playerId); // Skip rest if the player element was not found\n\n      if (!player) {\n        console.log(`Invalid player element specified for ${playerId}. Skipping...`);\n        continue;\n      } // Get the configured container. Use player as fallback if unconfigured or invalid\n\n\n      const container = config[playerId].container !== undefined ? document.getElementById(config[playerId].container) : player; // Skip rest if the container element was not found\n\n      if (!container) {\n        console.log(`Invalid container element specified for ${playerId}. Skipping...`);\n        continue;\n      } // Get the bounding box for the lottie player or container\n\n\n      const {\n        top,\n        bottom,\n        height\n      } = container.getBoundingClientRect(); // Calculate current view percentage\n\n      const current = window.innerHeight - top;\n      const max = window.innerHeight + height;\n      const currentPercent = current / max; // // Skip if out of viewport\n\n      if (currentPercent < 0 || currentPercent > 1) {\n        continue;\n      } // Find the first action that satisfies the current position conditions\n\n\n      const action = config[playerId].actions.find(({\n        start,\n        end\n      }) => currentPercent >= start && currentPercent <= end); // Skip if no matching action was found!\n\n      if (!action) {\n        continue;\n      } // Get lottie instance\n\n\n      const lottie = player.getLottie();\n      lottie.loop = true; // Process action types:\n\n      if (action.type === \"seek\") {\n        // Seek: Go to a frame based on player scroll position action\n        lottie.playSegments(action.frames, true);\n        lottie.goToAndStop(Math.ceil((currentPercent - action.start) / (action.end - action.start) * lottie.totalFrames), true);\n      } else if (action.type === \"loop\") {\n        // Loop: Loop a given frames\n        if (lottie.isPaused === true) {\n          lottie.playSegments(action.frames, true);\n        }\n      } else if (action.type === \"play\") {\n        // Play: Reset segments and continue playing full animation from current position\n        if (lottie.isPaused === true) {\n          lottie.resetSegments();\n        }\n\n        lottie.play();\n      } else if (action.type === \"stop\") {\n        // Stop: Stop playback\n        lottie.goToAndStop(action.frames[0]);\n        lottie.stop();\n      } else if (action.type === \"hover\") {\n        container.addEventListener(\"mouseenter\", function () {\n          if (lottie.isPaused === true) {\n            lottie.playSegments(action.frames, true);\n          }\n        });\n        container.addEventListener(\"mouseleave\", function () {\n          if (lottie.isPaused === false) {\n            lottie.pause();\n          }\n        });\n      }\n    }\n  });\n}\n\nconst animActions = {\n  // firstLottie: {\n  //   actions: [\n  //     {\n  //       start: 0,\n  //       end: 1,\n  //       type: \"loop\",\n  //       frames: [50, 300]\n  //     }\n  //   ]\n  // },\n  secondLottie: {\n    container: \"MyContainerId\",\n    actions: [{\n      start: 0,\n      end: 1,\n      type: \"seek\",\n      frames: [0, 301]\n    }]\n  },\n  thirdLottie: {\n    actions: [{\n      start: 0,\n      end: 0.3,\n      type: \"stop\",\n      frames: [0]\n    }, {\n      start: 0.3,\n      end: 1,\n      type: \"seek\",\n      frames: [0, 301]\n    }]\n  },\n  fourthLottie: {\n    actions: [{\n      start: 0,\n      end: 0.2,\n      type: \"stop\",\n      frames: [0]\n    }, {\n      start: 0.2,\n      end: 0.45,\n      type: \"seek\",\n      frames: [0, 45]\n    }, {\n      start: 0.45,\n      end: 1.0,\n      type: \"loop\",\n      frames: [45, 60]\n    }]\n  },\n  fifthLottie: {\n    actions: [{\n      start: 0,\n      end: 1.0,\n      type: \"loop\",\n      frames: [17, 60]\n    }]\n  },\n  seventhLottie: {\n    actions: [{\n      start: 0,\n      end: 1.0,\n      type: \"hover\",\n      frames: [45, 60]\n    }]\n  }\n};\nlottieScroll(animActions);\n(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n  console.log('window.innerHeight', window.innerHeight);\n  store.dispatch(loadUser());\n}, []); // to setup on hover for segments. make sure the first frame is set as the frame you want to start the segment looping from\n\nconst MyLottie = document.getElementById(\"seventhLottie\");\nMyLottie.getLottie().goToAndStop(45, true);\ndocument.getElementById(\"firstLottie\").getLottie().playSegments([100, 300], true);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/indexThree.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/indexThree.js"));
module.exports = __webpack_exports__;

})();